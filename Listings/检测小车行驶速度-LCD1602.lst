C51 COMPILER V9.60.0.0   _________________LCD1602                                          04/13/2022 18:40:18 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE _________________LCD1602
OBJECT MODULE PLACED IN .\Objects\检测小车行驶速度-LCD1602.obj
COMPILER INVOKED BY: D:\Code\ARM\C51\BIN\C51.EXE 检测小车行驶速度-LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\检测小车行驶速度-LCD1602.lst) TABS(2) OBJECT(.\Objects\检测小车行驶速度-LCD1602.obj)

line level    source

   1          /******************************************************************************************
   2          程序名：检查小车行使距离-LCD1602
   3          编写人：Yayi
   4          论坛：rtrobot.org　　　                                                
   5          /******************************************************************************************/
   6          
   7          #include <STC12C5A60S2.H>//头文件
   8          #include <LCD1602.h>
   9          
  10          sbit IN1=P1^0;
  11          sbit IN2=P1^1;
  12          sbit IN3=P1^2;
  13          sbit IN4=P1^3;
  14          
  15          unsigned int motor1=0;   //计左电机码盘脉冲值
  16          unsigned int motor2=0;   //计右电机码盘脉冲值
  17          unsigned int speed1=0;   //计左电机码盘脉冲值
  18          unsigned int speed2=0;   //计右电机码盘脉冲值
  19          unsigned int k=0;
  20          
  21          void Forward(void)
  22          {
  23   1              IN1=1;
  24   1              IN2=0;
  25   1              IN3=0;
  26   1              IN4=1;
  27   1      }
  28          
  29          /********************************************************************************************
  30          定时器0初始化
  31          /********************************************************************************************/
  32          void T0_init (void)
  33          {
  34   1        TMOD = 0x01;  //高4位控制T1，低4位控制T0
  35   1        EA = 1;   //中断总开关
  36   1        TH0 = 0;  //16位计数寄存器T0高8位
  37   1        TL0 = 0;  //16位计数寄存器T0低8位
  38   1        ET0 = 1;  //T0中断开关
  39   1        TR0 = 1;  //T0启动开关
  40   1      }
  41          
  42          /*********************************************************************************************
  43          外部中断INT0、INT1初始化函数
  44          /********************************************************************************************/
  45          void INT_init (void)
  46          {
  47   1        EA = 1;     //中断总开关  
  48   1        EX0 = 1;    //允许外部中断0中断
  49   1        IT0 = 1;    //1：下沿触发  0：低电平触发
  50   1      //  EX1 = 1;
  51   1      //  IT1 = 1;
  52   1      }
  53          
  54          /*********************************************************************************************
C51 COMPILER V9.60.0.0   _________________LCD1602                                          04/13/2022 18:40:18 PAGE 2   

  55          主程序
  56          /********************************************************************************************/
  57          void main(void)
  58          {   
  59   1        LCD1602_Init();
  60   1        LCD1602_Frist();
  61   1        INT_init();
  62   1        T0_init();
  63   1        Forward();
  64   1        while (1)
  65   1        {
  66   2          print(line_one,0,'M');
  67   2          print(line_one,1,'o');
  68   2          print(line_one,2,'t');
  69   2          print(line_one,3,'o');
  70   2          print(line_one,4,'r');
  71   2          print(line_one,5,'1');
  72   2          print(line_one,6,':');
  73   2          print(line_one,7,speed1/1000+0x30);
  74   2          print(line_one,8,speed1/100%10+0x30);
  75   2          print(line_one,9,speed1/10%10+0x30);
  76   2          print(line_one,10,speed1%10+0x30);
  77   2          print(line_one,11,'R');
  78   2          print(line_one,12,'/');
  79   2          print(line_one,13,'M');
  80   2          print(line_one,14,'I');
  81   2          print(line_one,15,'N');
  82   2      
  83   2      ////    print(line_two,0,'M');
  84   2      ////    print(line_two,1,'o');
  85   2      ////    print(line_two,2,'t');
  86   2      ////    print(line_two,3,'o');
  87   2      ////    print(line_two,4,'r');
  88   2      ////    print(line_two,5,'2');
  89   2      ////    print(line_two,6,':');
  90   2      ////    print(line_two,7,speed2/1000+0x30);
  91   2      ////    print(line_two,8,speed2/100%10+0x30);
  92   2      ////    print(line_two,9,speed2/10%10+0x30);
  93   2      ////    print(line_two,10,speed2%10+0x30);
  94   2      ////    print(line_two,11,'R');
  95   2      ////    print(line_two,12,'/');
  96   2      ////    print(line_two,13,'M');
  97   2      ////    print(line_two,14,'I');
  98   2      ////    print(line_two,15,'N');
  99   2              DELAY_MS(250);
 100   2          LCD1602_WriteCMD(CMD_clear);
 101   2          }
 102   1      }
 103          
 104          /*********************************************************************************************
 105          外部中断INT0计算电机1的脉冲
 106          /********************************************************************************************/
 107          void intersvr1(void) interrupt 0 using 1
 108          {
 109   1        motor1++;   
 110   1      }
 111          /*********************************************************************************************
 112          外部中断INT1计算电机2的脉冲
 113          /********************************************************************************************/
 114          void intersvr2(void) interrupt 2 using 3
 115          {
 116   1        motor2++;
C51 COMPILER V9.60.0.0   _________________LCD1602                                          04/13/2022 18:40:18 PAGE 3   

 117   1      }
 118          
 119          /********************************************************************************************
 120          定时器0中断函数
 121          注意：这里的speed为简单书写，逻辑公式过程应该为
 122          speed2=小车轮子周长/码盘格式*1秒的码盘脉冲格数
 123          定时器做出的效果为算出一秒内的距离
 124          /********************************************************************************************/ 
 125          void T0 (void) interrupt 1  using 2
 126          {
 127   1        TH0=(65536-1000)/256; //16位计数寄存器T0高8位，尝试修改1000成其他值
 128   1        TL0=(65536-1000)%256; //16位计数寄存器T0低8位，尝试修改1000成其他值
 129   1        k++;      //k自加1
 130   1        if(k==1000)   
 131   1        {
 132   2          k=0;      //重新定义k的值
 133   2          speed1=motor1*3;
 134   2          speed2=motor2*3;
 135   2          motor1=0;   //重新定义motor1的值
 136   2          motor2=0;   //重新定义motor1的值
 137   2        }   
 138   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    654    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
